# rsyslog v5 configuration file

# For more information see /usr/share/doc/rsyslog-*/rsyslog_conf.html
# If you experience problems, see http://www.rsyslog.com/doc/troubleshoot.html

#### MODULES ####

$ModLoad imuxsock # provides support for local system logging (e.g. via logger command)
$ModLoad imklog   # provides kernel logging support (previously done by rklogd)
#$ModLoad immark  # provides --MARK-- message capability
#$ModLoad omprog
$ModLoad ommail

# Provides UDP syslog reception
$ModLoad imudp
$UDPServerRun 514
$AllowedSender UDP, 127.0.0.1,xxx.xxx.xxx.0/24

# Provides TCP syslog reception
#$ModLoad imtcp
#$InputTCPServerRun 514


#### GLOBAL DIRECTIVES ####

# Use default timestamp format
$ActionFileDefaultTemplate RSYSLOG_TraditionalFileFormat

# File syncing capability is disabled by default. This feature is usually not required,
# not useful and an extreme performance hit
#$ActionFileEnableSync on

# Include all config files in /etc/rsyslog.d/
$IncludeConfig /etc/rsyslog.d/*.conf


#### RULES ####

# Log all kernel messages to the console.
# Logging much else clutters up the screen.
#kern.*                                                 /dev/console

# Log anything (except mail) of level info or higher.
# Don't log private authentication messages!
*.info,mail.none,authpriv.none,cron.none,local6.none    /var/log/messages
#mail.none;authpriv.none;cron.none                /var/log/messages

# The authpriv file has restricted access.
authpriv.*                                              /var/log/secure

$template mbody,"%fromhost% is login at %timegenerated%..\r\n%msg%"
#if $fromhost=='hoge' and $msg contains 'Accepted' then ^/root/slack.sh;mbody
if $msg contains 'Accepted' then ^/root/slack.sh;mbody


# Log all the mail messages in one place.
mail.*                                                  -/var/log/maillog


# Log cron stuff
cron.*                                                  /var/log/cron

# Everybody gets emergency messages
*.emerg                                                 *

# Save news errors of level crit and higher in a special file.
uucp,news.crit                                          /var/log/spooler

# Save boot messages also to boot.log
local7.*                                                /var/log/boot.log

# firewall log
#local6.*                                                /var/log/ssg5.log
$template ssg5,"/var/log/ssg5/ssg5_%$year%%$month%%$day%.log"
local6.* ?ssg5
#$ModLoad ommail
$ActionMailSMTPServer localhost
$ActionMailFrom root@localhost
$ActionMailTo admin
$template mail_subject,"ssg config changed: %fromhost%"
$template mail_body,"%fromhost% is configured..\r\n%msg%"
$ActionMailSubject mail_subject
$ActionExecOnlyOnceEveryInterval -1
if $msg contains 'configuration saved by netscreen' then :ommail:;mail_body

#$ActionMailSMTPServer localhost
#$ActionMailFrom root@localhost
$ActionMailTo admin
$template mailsubject,"ssg login: %fromhost%"
$template mailbody,"Login to %fromhost% ..\r\n%msg%"
$ActionMailSubject mailsubject
$ActionExecOnlyOnceEveryInterval -1
#if $msg contains_i 'logged in' then :ommail:;mailbody
if $fromhost=='hoge' and $msg contains_i 'logged in' then :ommail:;mailbody

# trap log
local5.*                                                /var/log/snmptrapd.log

#local0.*                                                /var/log/bigip
$template bigip,"/var/log/bigip/bigip_%$year%%$month%%$day%.log"
local0.* ?bigip

#local4.*                                                /var/log/forti
$template forti,"/var/log/forti/hoge_%$year%%$month%%$day%.log"
local4.* ?forti
$ActionMailSMTPServer localhost
$ActionMailFrom root@localhost
$ActionMailTo admin
$template mail_subject_forti,"Fortigate config changed: %fromhost%"
$template mail_body,"%fromhost% is configured..\r\n%msg%"
$ActionMailSubject mail_subject_hoge
$ActionExecOnlyOnceEveryInterval -1
if $fromhost=='hoge' and $msg contains 'changed' then :ommail:;mail_body

$template msubject,"hoge login: %fromhost%"
$template mbody,"%fromhost% is login at %timegenerated%..\r\n%msg%"
#if $fromhost=='hoge' and $msg contains 'action=login' then ^/root/hoge-alert.sh;mbody
if $fromhost=='hoge' and $msg contains 'action=login' then ^/root/slack.sh;mbody

$template mftp,"%fromhost% detect ftp access..\r\n%msg%"
if $fromhost=='hoge' then ^/root/hoge-ftp.sh;mftp


#sql
#module(load="ommysql")
$ModLoad ommysql 
*.*	:ommysql:localhost,Syslog,rsyslog,password

# ### begin forwarding rule ###
# The statement between the begin ... end define a SINGLE forwarding
# rule. They belong together, do NOT split them. If you create multiple
# forwarding rules, duplicate the whole block!
# Remote Logging (we use TCP for reliable delivery)
#
# An on-disk queue is created for this action. If the remote host is
# down, messages are spooled to disk and sent when it is up again.
#$WorkDirectory /var/lib/rsyslog # where to place spool files
#$ActionQueueFileName fwdRule1 # unique name prefix for spool files
#$ActionQueueMaxDiskSpace 1g   # 1gb space limit (use as much as possible)
#$ActionQueueSaveOnShutdown on # save messages to disk on shutdown
#$ActionQueueType LinkedList   # run asynchronously
#$ActionResumeRetryCount -1    # infinite retries if host is down
# remote host is: name/ip:port, e.g. 192.168.0.1:514, port optional
#*.* @@remote-host:514
# ### end of the forwarding rule ###
